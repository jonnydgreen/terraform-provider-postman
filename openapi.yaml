openapi: 3.0.3
info:
    title: Postman API
    description: |
        The Postman API lets you to programmatically access data stored in Postman account with ease.

        ## Getting started

        The easiest way to get started with the Postman API is to [fork this collection](https://learning.postman.com/docs/collaborating-in-postman/version-control/#creating-a-fork) to your own workspace. You can then use Postman to send requests.

        ## Overview

        1. You must use a valid API Key to send requests to the API endpoints. You can get your API key from Postman's [integrations dashboard](https://go.postman.co/settings/me/api-keys).
        1. The API has access rate limits.
        1. The API only responds to HTTPS-secured communications. Any requests sent via HTTP return an HTTP `301` redirect to the corresponding HTTPS resources.
        1. The API returns requests responses in [JSON format](https://en.wikipedia.org/wiki/JSON). When an API request returns an error, it is sent in the JSON response as an `"error": {}` key.
        1. The request method (verb) determines the nature of action you intend to perform. A request made using the `GET` method implies that you want to fetch something from Postman, and `POST` implies you want to save something new to Postman.
        1. API calls respond with the appropriate [HTTP status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) for all requests. Within the Postman client, when a response is received, the status code is highlighted and is accompanied by a help text that indicates the possible meaning of the response code. A `200 OK` indicates success, while an HTTP `4XX` or HTTP `5XX` response code indicates an error from the requesting client or our API servers, respectively.
        1. Individual resources in your Postman account are accessible using its unique ID (`uid`) value. The `uid` is a simple concatenation of the resource owner's user ID and the resource's ID. For example, a collection's `uid` is `{{owner_id}}-{{collection_id}}` value.

        ## ID and UID

        All items in Postman, such as collections, mocks, workspaces, and APIs, have ID and UIDs:

        - An ID is the unique ID assigned to a Postman item. For example, `ec29121c-5203-409f-9e84-e83ffc10f226`.
        - The UID is the **full** ID of a Postman item. This value is the item's unique ID concatenated with the user ID. For example, in the `12345678-ec29121c-5203-409f-9e84-e83ffc10f226` UID:
          - `12345678` is the user's ID.
          - `ec29121c-5203-409f-9e84-e83ffc10f226` is the item's ID.

        ## Authentication

        An API key is required to be sent as part of every request to the Postman API, in the form of an `X-Api-Key` request header. To get a Postman API key, you can generate one in the [**API keys**](https://postman.postman.co/settings/me/api-keys) section in your Postman account settings.

        An API key tells the API server that the received request from you. Everything that you have access to in Postman is accessible with your API key.

        For ease of use in Postman, you can store your API key as the `postman_api_key` [environment variable](https://www.getpostman.com/docs/environments). The Postman API [collection](https://www.getpostman.com/docs/collections) will automatically use it to make API calls.

        ### API Key related error response

        If an API key is missing, malformed, or invalid, you will receive an HTTP `401 Unauthorized` response code and the following JSON response:

        ```json
        {
        "error": {
            "name": "AuthenticationError",
            "message": "Invalid API Key. Every request requires a valid API Key to be sent."
          }
        }
        ```

        ### Using the API key as a query parameter

        Each request that accepts API key as `X-Api-Key` request header also accepts the key when it is sent as the `apikey` query parameter.

        An API key sent as part of the header has a higher priority when you send the key as both a request header and a query parameter.

        ## Rate Limits

        API access rate limits apply at a per-API key basis in unit time. Access to the API using an API key is limited to **60 requests per minute**. In addition, every API response is accompanied by the following set of headers to identify the status of your use:

        | Header | Description |
        | ------ | ----------- |
        | `X-RateLimit-Limit` | The maximum number of requests that the consumer is permitted to make per minute. |
        | `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |
        | `X-RateLimit-Reset` | The time at which the current rate limit window resets in UTC epoch seconds. |

        Once you reach the rate limit you will receive a response similar to the following HTTP `429 Too Many Requests` response:

        ```json
        {
          "error": {
            "name": "rateLimitError",
            "message": "Rate Limit exceeded. Please retry at 1465452702843"
          }
        }
        ```

        In the event you receive an HTTP `503` response from our servers, it indicates that we have had an unexpected spike in API access traffic. This is usually operational within the next five minutes. If the outage persists or you receive any other form of an HTTP `5XX` error, [contact support](https://support.postman.com/hc/en-us/requests/new/).

        ## Support

        For help regarding accessing the Postman API, you can:

        - Visit [Postman Support](https://support.postman.com/hc/en-us) or our [Community and Support](https://www.postman.com/community/) sites.
        - Reach out to the [Postman community](https://community.postman.com/).
        - Submit a help request to [Postman support](https://support.postman.com/hc/en-us/requests/new/).

        ## Policies

        - [Postman Terms of Service](http://www.postman.com/legal/terms/)
        - [Postman Privacy Policy](https://www.postman.com/legal/privacy-policy/)
    version: "1.0"
    termsOfService: http://postman.com/legal/terms/
    contact:
        name: Postman Support
        email: help@postman.com
        url: https://www.postman.com/community/
    license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0.html
    x-api-id: postman_api_key
    x-audience: Developers
    x-newrelic-app-id:
        - 1162449093
servers:
    - url: https://api.getpostman.com
security:
    - PostmanApiKey: []
paths:
    /workspaces/{workspaceId}:
        get:
            summary: Get a workspace
            description: |
                Gets information about a workspace.

                **Note:**

                This endpoint's response contains the `visibility` field. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:

                - `only-me` — Applies to the **My Workspace** workspace.
                - `personal` — Only you can access the workspace.
                - `team` — All team members can access the workspace.
                - `private-team` — Only invited team members can access the workspace.
                - `public` — Everyone can access the workspace.
            operationId: singleWorkspace
            tags:
                - Workspaces
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    workspace:
                                        type: object
                                        description: Information about the workspace.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The workspace's ID.
                                                example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                            name:
                                                type: string
                                                description: The workspace's name.
                                                example: Team Workspace
                                            type:
                                                type: string
                                                description: The type of workspace.
                                                enum:
                                                    - personal
                                                    - team
                                                example: personal
                                            description:
                                                type: string
                                                description: The workspace's description.
                                                example: The Test team workspace.
                                            visibility:
                                                type: string
                                                description: |
                                                    The workspace's visibility. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:

                                                    - `only-me` — Applies to the **My Workspace** workspace.
                                                    - `personal` — Only you can access the workspace.
                                                    - `team` — All team members can access the workspace.
                                                    - `private-team` — Only invited team members can access the workspace.
                                                    - `public` — Everyone can access the workspace.
                                                enum:
                                                    - only-me
                                                    - personal
                                                    - team
                                                    - private-team
                                                    - public
                                                example: private-team
                                            createdBy:
                                                type: string
                                                description: The user ID of the user who created the workspace.
                                                example: "12345678"
                                            updatedBy:
                                                type: string
                                                description: The user ID of the user who last updated the workspace.
                                                example: "12345678"
                                            createdAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the workspace was created.
                                                example: "2022-07-06T16:18:32.000Z"
                                            updatedAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the workspace was last updated.
                                                example: "2022-07-06T20:55:13.000Z"
                                            collections:
                                                type: array
                                                description: The workspace's collections.
                                                items:
                                                    type: object
                                                    description: Information about the collection.
                                                    properties:
                                                        id:
                                                            type: string
                                                            format: uuid
                                                            description: The collection's ID.
                                                            example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                        name:
                                                            type: string
                                                            description: The collection's name.
                                                            example: Test Collection
                                                            deprecated: true
                                                        uid:
                                                            type: string
                                                            format: uid
                                                            description: The collection's unique ID.
                                                            example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                            deprecated: true
                                            environments:
                                                type: array
                                                description: The workspace's environments.
                                                items:
                                                    type: object
                                                    description: Information about the environment.
                                                    properties:
                                                        id:
                                                            type: string
                                                            format: uuid
                                                            description: The environment's ID.
                                                            example: 5daabc50-8451-43f6-922d-96b403b4f28e
                                                        name:
                                                            type: string
                                                            description: The environment's name.
                                                            example: Test Environment
                                                            deprecated: true
                                                        uid:
                                                            type: string
                                                            format: uid
                                                            description: The environment's unique ID.
                                                            example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                                            deprecated: true
                                            mocks:
                                                type: array
                                                description: The workspace's mock servers.
                                                items:
                                                    type: object
                                                    description: Information about the mock server.
                                                    properties:
                                                        id:
                                                            type: string
                                                            format: uuid
                                                            description: The mock server's ID.
                                                            example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                                        name:
                                                            type: string
                                                            description: The mock server's name.
                                                            example: Test Mock
                                                            deprecated: true
                                                        uid:
                                                            type: string
                                                            format: uid
                                                            description: The mock server's unique ID.
                                                            example: 12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289
                                                            deprecated: true
                                            monitors:
                                                type: array
                                                description: The workspace's monitors.
                                                items:
                                                    type: object
                                                    description: Information about the monitor.
                                                    properties:
                                                        id:
                                                            type: string
                                                            format: uuid
                                                            description: The monitor's ID.
                                                            example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                                        name:
                                                            type: string
                                                            description: The monitor's name.
                                                            example: Test Environment
                                                            deprecated: true
                                                        uid:
                                                            type: string
                                                            format: uid
                                                            description: The monitor's unique ID.
                                                            example: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                                            deprecated: true
                                            apis:
                                                type: array
                                                description: The workspace's APIs.
                                                items:
                                                    type: object
                                                    description: Information about the API.
                                                    properties:
                                                        id:
                                                            type: string
                                                            format: uuid
                                                            description: The API's ID.
                                                            example: 387c2863-6ee3-4a56-8210-225f774edade
                                                        name:
                                                            type: string
                                                            description: The API's name.
                                                            example: Test API
                                                            deprecated: true
                                                        uid:
                                                            type: string
                                                            format: uid
                                                            description: The API's unique ID.
                                                            example: 12345678-387c2863-6ee3-4a56-8210-225f774edade
                                                            deprecated: true
                            example:
                                workspace:
                                    id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                    name: Team Workspace
                                    type: team
                                    description: The Test team workspace.
                                    visibility: private-team
                                    createdBy: "12345678"
                                    updatedBy: "12345678"
                                    createdAt: "2022-07-06T16:18:32.000Z"
                                    updatedAt: "2022-07-06T20:55:13.000Z"
                                    collections:
                                        - id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                          name: Test Collection
                                          uid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    environments:
                                        - id: 5daabc50-8451-43f6-922d-96b403b4f28e
                                          name: Test Environment
                                          uid: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                    mocks:
                                        - id: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                          name: Test Mock
                                          uid: 12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289
                                    monitors:
                                        - id: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                          name: Test Monitor
                                          uid: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                    apis:
                                        - id: 387c2863-6ee3-4a56-8210-225f774edade
                                          name: Test API
                                          uid: 12345678-387c2863-6ee3-4a56-8210-225f774edade
                "401":
                    $ref: "#/components/responses/Unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundDatabase"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        put:
            summary: Update a workspace
            description: |
                Updates a workspace.

                **Note:**

                You can change a workspace's type from `personal` to `team`, but you **cannot** change a workspace from `team` to `personal`.

                ### Important:

                We **deprecated** linking collections or environments between workspaces. We do **not** recommend that you do this.

                If you have a linked collection or environment, note the following:

                - The endpoint does **not** create a clone of a collection or environment.
                - Any changes you make to a linked collection or environment changes them in **all** workspaces.
                - If you delete a collection or environment linked between workspaces, the system deletes it in **all** the workspaces.
            operationId: updateWorkspace
            tags:
                - Workspaces
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                workspace:
                                    type: object
                                    properties:
                                        name:
                                            type: string
                                            description: The workspace's name.
                                            example: Test Workspace
                                        type:
                                            type: string
                                            description: |
                                                The type of workspace:

                                                - `personal` — A personal workspace.
                                                - `team` — A team workspace.
                                            enum:
                                                - team
                                                - personal
                                            example: team
                                        description:
                                            type: string
                                            description: The workspace's description.
                                            example: This is a test team workspace.
                        example:
                            workspace:
                                name: Test Workspace
                                description: This is a test team workspace.
                                type: team
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    workspace:
                                        type: object
                                        description: Information about the updated workspace.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The workspace's ID.
                                                example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                            name:
                                                type: string
                                                description: The workspace's name.
                                                example: Test Workspace
                            example:
                                workspace:
                                    id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                    name: Test Workspace
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: invalidUIDError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: The ID provided is not a valid UID.
                            example:
                                error:
                                    name: invalidUIDError
                                    message: The ID provided is not a valid UID.
                "401":
                    $ref: "#/components/responses/Unauthorized"
                "403":
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: forbiddenError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: You do not have access to update this workspace.
                            example:
                                error:
                                    name: forbiddenError
                                    message: You do not have access to update this workspace.
                "404":
                    $ref: "#/components/responses/instanceNotFoundWorkspace"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        delete:
            summary: Delete a workspace
            description: |
                Deletes an existing workspace.

                ### Important:

                If you delete a workspace that has a linked collection or environment with another workspace, this will delete the collection and environment in **all** workspaces.
            operationId: deleteWorkspace
            tags:
                - Workspaces
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    workspace:
                                        type: object
                                        description: Information about the deleted workspace.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The workspace's ID.
                                                example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                            example:
                                workspace:
                                    id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                "401":
                    $ref: "#/components/responses/Unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundWorkspace"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/workspaceId"
components:
    securitySchemes:
        PostmanApiKey:
            type: apiKey
            in: header
            name: x-api-key
    responses:
        folderNotEmptyError:
            description: Bad Request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            name:
                                type: string
                                description: The error name.
                                example: instanceNotFoundError
                            message:
                                type: string
                                description: The error message.
                                example: You need to empty this folder before deleting it.
                    example:
                        name: folderNotEmptyError
                        message: You need to empty this folder before deleting it.
        forbiddenError:
            description: Forbidden
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: forbiddenError
                                    message:
                                        type: string
                                        description: The error message
                                        example: You do not have enough permissions to perform this action.
                    example:
                        error:
                            name: forbiddenError
                            message: You do not have enough permissions to perform this action.
        instanceNotFoundApi:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: We could not find the API you are looking for
                    example:
                        error:
                            name: instanceNotFoundError
                            message: We could not find the API you are looking for
        instanceNotFoundDatabase:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: Instance not found in the database.
                    example:
                        error:
                            name: instanceNotFoundError
                            message: Instance not found in the database.
        instanceNotFoundElementFolder:
            description: Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified API does not exist.
                    examples:
                        Not Found:
                            value:
                                error:
                                    name: instanceNotFoundError
                                    message: The specified API does not exist.
                        Folder Not Found:
                            value:
                                name: instanceNotFoundError
                                message: Instance not found for the model Folder, id 1
        instanceNotFoundEnvironment:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: We could not find the environment you are looking for
                    example:
                        error:
                            name: instanceNotFoundError
                            message: We could not find the environment you are looking for
        instanceNotFoundCollection:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified item does not exist.
                                    details:
                                        type: object
                                        description: Information about the error.
                                        properties:
                                            item:
                                                type: string
                                                description: The instance item.
                                                example: collection
                                            id:
                                                type: string
                                                format: uuid
                                                description: The collection ID.
                                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                    example:
                        error:
                            name: instanceNotFoundError
                            message: The specified item does not exist.
                            details:
                                item: collection
                                id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
        instanceNotFoundMock:
            description: Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified mock does not exist.
                                    details:
                                        type: array
                                        description: Information about the error.
                                        items:
                                            type: string
                                        example: {}
                    example:
                        error:
                            name: instanceNotFoundError
                            message: The specified mock does not exist.
                            details: {}
        instanceNotFoundMonitor:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified monitor does not exist.
                    example:
                        error:
                            name: instanceNotFoundError
                            message: The specified monitor does not exist.
        instanceNotFoundWorkspace:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified workspace does not exist.
                    example:
                        error:
                            name: instanceNotFoundError
                            message: The specified workspace does not exist.
        internalServerError:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: serverError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: An error has occurred on the server.
                    example:
                        error:
                            name: serverError
                            message: An error has occurred on the server.
        invalidParamsError:
            description: Invalid Parameters
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: invalidParamsError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified parameter is in an invalid format
        PANElementCreated:
            description: Created
            content:
                application/json:
                    schema:
                        type: object
                        description: Information about the Private API Network element.
                        properties:
                            addedAt:
                                type: string
                                format: date-time
                                description: The date and time at which the element was added.
                                example: "2022-06-09T14:48:45.000Z"
                            addedBy:
                                type: integer
                                description: The user who added the element.
                                example: 12345678
                            createdBy:
                                type: integer
                                description: The user who created the element.
                                example: 12345678
                            createdAt:
                                type: string
                                format: date-time
                                description: The date and time at which the element was created.
                                example: "2021-10-11T09:39:33.000Z"
                            updatedBy:
                                type: integer
                                description: The user who last updated the element.
                                example: 12345678
                            updatedAt:
                                type: string
                                format: date-time
                                description: The date and time at which the element was last updated.
                                example: "2022-12-07T17:54:33.000Z"
                            type:
                                type: string
                                description: The element's type.
                                example: api
                            id:
                                type: string
                                description: The element's ID or UID.
                                example: 5360b75f-447e-467c-9299-12fd6c92450d
                            name:
                                type: string
                                description: The element's name.
                                example: Billing API
                            summary:
                                type: string
                                description: The element's summary.
                                example: The payments and account services API.
                            description:
                                type: string
                                description: The element's description.
                                example: ~
                            href:
                                type: string
                                format: url
                                description: The element's Postman HREF.
                                example: https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                            parentFolderId:
                                type: integer
                                description: The parent folder ID.
                                example: 1
        PANFolderCreated:
            description: Created
            content:
                application/json:
                    schema:
                        type: object
                        description: Information about the Private API Network folder.
                        properties:
                            id:
                                type: integer
                                description: The folder's ID.
                                example: 1
                            parentFolderId:
                                type: integer
                                description: The parent folder ID.
                                example: 0
                            updatedAt:
                                type: string
                                format: date-time
                                description: The date and time at which the folder was updated.
                                example: "2022-12-07T18:00:39.000Z"
                            updatedBy:
                                type: integer
                                description: The user who updated the folder.
                                example: 12345678
                            createdBy:
                                type: integer
                                description: The user who created the element.
                                example: 12345678
                            createdAt:
                                type: string
                                format: date-time
                                description: The date and time at which the element was created.
                                example: "2022-12-07T18:00:39.000Z"
                            name:
                                type: string
                                description: The folder's name.
                                example: Billing
                            description:
                                type: string
                                description: The element's description.
                                example: The Billing API.
                            type:
                                type: string
                                description: The folder's type. This is always the `folder` value.
                                example: folder
        paramMissingError:
            description: Parameter Missing
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: paramMissingError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: Parameter is missing in the request.
        rateLimited:
            description: Too Many Requests
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: string
                                description: The error name.
                                example: rateLimited
                            message:
                                type: string
                                description: The error message.
                                example: Rate limit exceeded. Please retry after 1669048687
                    example:
                        error: rateLimited
                        message: Rate limit exceeded. Please retry after 1669048687
        scimBadRequest:
            description: Bad Request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: This Postman team doesn't exist anymore.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "400"
                    examples:
                        Invalid Team:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: This Postman team doesn't exist anymore.
                                status: "400"
        scimInternalErrorGroup:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Couldn't fetch members of the team.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "500"
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: Couldn't fetch members of the team.
                        status: "500"
        scimInternalErrorGroupUpdate:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Couldn't update this team member's information. Try again — it should work next time around.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "500"
                    examples:
                        Cannot Get Information:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Unable to fetch information about this team member.
                                status: "500"
                        Cannot Update Group:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Couldn't update this team member's information. Try again — it should work next time around.
                                status: "500"
                        Cannot Add Team Members:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Unable to add members to the team. Try again — it should work next time around.
                                status: "500"
        scimInternalErrorUser:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Unable to fetch information about this team member.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "500"
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: Unable to fetch information about this team member.
                        status: "500"
        scimInternalErrorUserUpdate:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Couldn't update this team member's information. Try again — it should work next time around.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "500"
                    examples:
                        Cannot Get Information:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Unable to fetch information about this team member.
                                status: "500"
                        Cannot Update User:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Couldn't update this team member's information. Try again — it should work next time around.
                                status: "500"
                        Cannot Add Team Members:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Unable to add members to the team. Try again — it should work next time around.
                                status: "500"
        scimForbidden:
            description: Forbidden
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "403"
                    examples:
                        Invalid API Key:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.
                                status: "403"
                        Admin Team Mismatch:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: The admin is not allowed to perform this action.
                                status: "403"
                        Forbidden:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: This person isn't a member of the team.
                                status: "403"
        scimGroupNotFound:
            description: Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: This group isn't a member of the team.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "404"
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: This group isn't a member of the team.
                        status: "404"
        scimGroupResource:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: A list of schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:schemas:core:2.0:Group
                            id:
                                type: string
                                description: The group's SCIM ID.
                                example: "405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
                            userName:
                                type: string
                                description: The group's display name.
                                example: Test-API
                            members:
                                type: object
                                description: Information about the group's members.
                                properties:
                                    value:
                                        type: string
                                        description: ""
                                        example: ""
                                    display:
                                        type: string
                                        description: ""
                                        example: ""
                            externalId:
                                type: string
                                description: The group's external ID.
                                example: "1234"
                            meta:
                                type: object
                                description: The response's non-standard meta information.
                                properties:
                                    resourceType:
                                        type: string
                                        description: The resource type.
                                        example: Group
                                    created:
                                        type: string
                                        format: date-time
                                        description: The date and time at which the group was created.
                                        example: "2022-02-22T04:24:13.000Z"
                                    lastModified:
                                        type: string
                                        format: date-time
                                        description: The date and time at which the group was last modified.
                                        example: "2022-02-22T04:24:13.000Z"
                    example:
                        schemas:
                            - urn:ietf:params:scim:schemas:core:2.0:Group
                        id: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                        displayName: Test-API
                        members:
                            - value: b1c794f24f4c49f4b5d503a4cb2686ea
                              display: SCIM 2 Group A
                        externalId: "1234"
                        meta:
                            resourceType: Group
                            created: "2022-02-22T04:24:13.000Z"
                            lastModified: "2022-02-22T04:24:13.000Z"
        scimTooManyRequests:
            description: Too Many Requests
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: That's 180 attempts in less than a minute. Wait for a minute and then try again.
                            status:
                                type: number
                                description: The HTTP status code.
                                example: 429
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: That's 180 attempts in less than a minute. Wait for a minute and then try again.
                        status: 429
        scimUserNotFound:
            description: Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: This person isn't a member of the team.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "404"
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: This person isn't a member of the team.
                        status: "404"
        scimUnauthorized:
            description: Unauthorized
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Unable to access the team. Check if you have entered a valid API key.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "401"
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: Unable to access the team. Check if you have entered a valid API key.
                        status: "401"
        scimUserResource:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: A list of schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:schemas:core:2.0:User
                            id:
                                type: string
                                description: The team member's SCIM ID.
                                example: "405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
                            userName:
                                type: string
                                description: The team member's SCIM username.
                                example: taylor.lee@example.com
                            name:
                                type: object
                                description: Information about the Postman team member.
                                properties:
                                    givenName:
                                        type: string
                                        description: The team member's first name.
                                        example: Taylor
                                    familyName:
                                        type: string
                                        description: The team member's last name.
                                        example: Lee
                            externalId:
                                type: string
                                description: The team member's external ID.
                                example: "12345678"
                            active:
                                type: boolean
                                description: If true, the team member is active.
                                example: true
                            meta:
                                type: object
                                description: The response's non-standard meta information.
                                properties:
                                    resourceType:
                                        type: string
                                        description: The resource type.
                                        example: User
                                    created:
                                        type: string
                                        format: date-time
                                        description: The date and time at which the team member was created.
                                        example: "2021-02-22T04:24:13.000Z"
                                    lastModified:
                                        type: string
                                        format: date-time
                                        description: The date and time at which the team member was last modified.
                                        example: "2021-02-22T04:24:13.000Z"
                    example:
                        schemas:
                            - urn:ietf:params:scim:schemas:core:2.0:User
                        id: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                        userName: taylor.lee@example.com
                        name:
                            givenName: Taylor
                            familyName: Lee
                        externalId: "12345678"
                        active: true
                        meta:
                            resourceType: User
                            created: "2021-02-22T04:24:13.000Z"
                            lastModified: "2021-02-22T04:24:13.000Z"
        mockServerResponse:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: array
                        description: Information about the mock server's responses.
                        items:
                            type: object
                            description: Information about the server response.
                            properties:
                                id:
                                    type: string
                                    format: uuid
                                    description: The server response's ID.
                                    example: 965cdd16-fe22-4d96-a161-3d05490ac421
                                name:
                                    type: string
                                    description: The server response's name.
                                    example: Internal Server Error
                                statusCode:
                                    type: number
                                    description: The server response's 5xx HTTP response code.
                                    example: 500
                                createdAt:
                                    type: string
                                    format: date-time
                                    description: The date and time at which the server response was created.
                                    example: "2022-08-02T14:57:44.000Z"
                                updatedAt:
                                    type: string
                                    format: date-time
                                    description: The date and time at which the server response was last updated.
                                    example: "2022-08-02T14:57:44.000Z"
                                createdBy:
                                    type: string
                                    description: The user ID of the user who created the server response.
                                    example: "12345678"
                                updatedBy:
                                    type: string
                                    description: The user ID of the user who last updated the server response.
                                    example: "12345678"
                    example:
                        createdAt: "2022-08-02T15:08:03.000Z"
                        updatedAt: "2022-08-02T15:08:03.000Z"
                        id: 965cdd16-fe22-4d96-a161-3d05490ac421
                        name: Internal Server Error
                        statusCode: 500
                        headers:
                            - key: Content-Type
                              value: application/json
                        language: json
                        body: "{\n    \"message\": \"Something went wrong; try again later.\"\n}"
                        createdBy: "12345678"
                        updatedBy: "12345678"
                        mock: 32cd624d-9986-4f20-9048-89252f722269
        serverResponseNotFoundError:
            description: Bad Request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: serverResponseNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: We could not find the mock server response you are looking for.
                    example:
                        error:
                            name: serverResponseNotFoundError
                            message: We could not find the mock server response you are looking for.
        Unauthorized:
            description: Unauthorized
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error message.
                                        example: AuthenticationError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: Invalid API Key. Every request requires a valid API Key to be sent.
                    example:
                        error:
                            name: AuthenticationError
                            message: Invalid API Key. Every request requires a valid API Key to be sent.
    schemas:
        scimGroupResource:
            description: The SCIM group resource object.
            type: object
            properties:
                schemas:
                    type: array
                    description: A list of schema resource URIs.
                    items:
                        type: string
                        example: urn:ietf:params:scim:schemas:core:2.0:Group
                id:
                    type: string
                    description: The group's SCIM ID.
                    example: "405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
                displayName:
                    type: string
                    description: The group's display name.
                    example: Test SCIMv2
                members:
                    type: object
                    description: Information about the group's members.
                    properties:
                        value:
                            type: string
                            description: ""
                            example: ""
                        display:
                            type: string
                            description: ""
                            example: ""
                externalId:
                    type: string
                    description: The group's external ID.
                    example: "1234"
                meta:
                    type: object
                    description: The response's non-standard meta information.
                    properties:
                        resourceType:
                            type: string
                            description: The resource type.
                            example: Group
                        created:
                            type: string
                            format: date-time
                            description: The date and time at which the group was created.
                            example: "2022-02-22T04:24:13.000Z"
                        lastModified:
                            type: string
                            format: date-time
                            description: The date and time at which the group was last modified.
                            example: "2022-02-22T04:24:13.000Z"
        scimUserResource:
            description: The SCIM user resource object.
            type: object
            properties:
                schemas:
                    type: array
                    description: A list of schema resource URIs.
                    items:
                        type: string
                        example: urn:ietf:params:scim:schemas:core:2.0:User
                id:
                    type: string
                    description: The team member's SCIM ID.
                    example: "405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
                userName:
                    type: string
                    description: The team member's SCIM username.
                    example: taylor.lee@example.com
                name:
                    type: object
                    description: Information about the Postman team member.
                    properties:
                        givenName:
                            type: string
                            description: The team member's first name.
                            example: Taylor
                        familyName:
                            type: string
                            description: The team member's last name.
                            example: Lee
                externalId:
                    type: string
                    description: The team member's external ID.
                    example: "12345678"
                active:
                    type: boolean
                    description: If true, the team member is active.
                    example: true
                meta:
                    type: object
                    description: The response's non-standard meta information.
                    properties:
                        resourceType:
                            type: string
                            description: The resource type.
                            example: User
                        created:
                            type: string
                            format: date-time
                            description: The date and time at which the team member was created.
                            example: "2021-02-22T04:24:13.000Z"
                        lastModified:
                            type: string
                            format: date-time
                            description: The date and time at which the team member was last modified.
                            example: "2021-02-22T04:24:13.000Z"
        importExportFile:
            type: object
            required:
                - type
                - input
            properties:
                type:
                    type: string
                    description: The `file` type value.
                    enum:
                        - file
                    example: file
                input:
                    type: string
                    description: A file containing a valid user's export .zip file.
                    format: binary
        jsonSchema:
            type: object
            properties:
                type:
                    type: string
                    description: The OpenAPI definition type.
                    enum:
                        - json
                    example: json
                input:
                    type: object
                    description: An object that contains a valid JSON OpenAPI definition. For more information, read the [OpenAPI documentation](https://swagger.io/docs/specification/basic-structure/).
                    properties: {}
        jsonStringified:
            type: object
            properties:
                type:
                    type: string
                    description: The OpenAPI definition type.
                    enum:
                        - json
                    example: json
                input:
                    type: string
                    description: The stringified OpenAPI definition.
                    example: "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Test API\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://locahost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"List all users\",\n        \"operationId\": \"listUser\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The user's ID.\",\n            \"example\": 1234,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Information about the user.\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses.\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
        CreatePANApi:
            type: object
            properties:
                api:
                    type: object
                    required:
                        - id
                        - parentFolderId
                    properties:
                        id:
                            type: string
                            description: The API's ID.
                            example: 5360b75f-447e-467c-9299-12fd6c92450d
                        parentFolderId:
                            type: integer
                            description: The API's parent folder ID.
                            example: 1
        CreatePANWorkspace:
            type: object
            properties:
                workspace:
                    type: object
                    required:
                        - id
                        - parentFolderId
                    properties:
                        id:
                            type: string
                            description: The workspace's ID.
                            example: 5360b75f-447e-467c-9299-12fd6c92450d
                        parentFolderId:
                            type: integer
                            description: The workspace's parent folder ID.
                            example: 1
        CreatePANCollection:
            type: object
            properties:
                collection:
                    type: object
                    required:
                        - id
                        - parentFolderId
                    properties:
                        id:
                            type: string
                            description: The collection's ID.
                            example: 5360b75f-447e-467c-9299-12fd6c92450d
                        parentFolderId:
                            type: integer
                            description: The collection's parent folder ID.
                            example: 1
        CreatePANFolder:
            type: object
            properties:
                folder:
                    type: object
                    required:
                        - name
                    properties:
                        name:
                            type: string
                            description: The folder's name.
                            example: Billing
                        description:
                            type: string
                            description: The folder's description.
                            example: The Billing API.
                        parentFolderId:
                            type: integer
                            default: 0
                            description: The folder's parent folder ID. This value defaults to `0`.
                            example: 0
        PANElementCreated:
            description: Information about the Private API Network element.
            type: object
            properties:
                addedAt:
                    type: string
                    format: date-time
                    description: The date and time at which the element was added.
                    example: "2022-06-09T14:48:45.000Z"
                addedBy:
                    type: integer
                    description: The user who added the element.
                    example: 12345678
                createdBy:
                    type: integer
                    description: The user who created the element.
                    example: 12345678
                createdAt:
                    type: string
                    format: date-time
                    description: The date and time at which the element was created.
                    example: "2021-10-11T09:39:33.000Z"
                updatedBy:
                    type: integer
                    description: The user who last updated the element.
                    example: 12345678
                updatedAt:
                    type: string
                    format: date-time
                    description: The date and time at which the element was last updated.
                    example: "2022-12-07T17:54:33.000Z"
                type:
                    type: string
                    description: The element's type.
                    example: api
                id:
                    type: string
                    description: The element's ID or UID.
                    example: 5360b75f-447e-467c-9299-12fd6c92450d
                name:
                    type: string
                    description: The element's name.
                    example: Billing API
                summary:
                    type: string
                    description: The element's summary.
                    example: The payments and account services API.
                description:
                    type: string
                    description: The element's description.
                    example: null
                href:
                    type: string
                    format: url
                    description: The element's Postman URL.
                    example: https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                parentFolderId:
                    type: integer
                    description: The parent folder's ID.
                    example: 1
        PANFolderCreated:
            type: object
            description: Information about the Private API Network folder.
            properties:
                id:
                    type: integer
                    description: The folder's ID.
                    example: 1
                parentFolderId:
                    type: integer
                    description: The parent folder ID.
                    example: 0
                updatedAt:
                    type: string
                    format: date-time
                    description: The date and time at which the folder was updated.
                    example: "2022-12-07T18:00:39.000Z"
                updatedBy:
                    type: integer
                    description: The user who updated the folder.
                    example: 12345678
                createdBy:
                    type: integer
                    description: The user who created the folder.
                    example: 12345678
                createdAt:
                    type: string
                    format: date-time
                    description: The date and time at which the element was created.
                    example: "2022-12-07T18:00:39.000Z"
                name:
                    type: string
                    description: The folder's name.
                    example: Billing
                description:
                    type: string
                    description: The folder's description.
                    example: The Billing API.
                type:
                    type: string
                    description: The folder's type. This is always the `folder` value.
                    example: folder
            example:
                id: 1
                parentFolderId: 0
                updatedAt: "2022-12-07T18:00:39.000Z"
                updatedBy: 12345678
                createdBy: 12345678
                createdAt: "2022-12-07T18:00:39.000Z"
                name: Billing
                description: The Billing API.
                type: folder
        UpdatePANApi:
            type: object
            properties:
                api:
                    type: object
                    properties:
                        parentFolderId:
                            type: integer
                            description: The API's new parent folder ID.
                            example: 1
                        summary:
                            type: string
                            description: The API's updated summary.
                            example: The payments and account services API.
        UpdatePANWorkspace:
            type: object
            properties:
                workspace:
                    type: object
                    properties:
                        parentFolderId:
                            type: integer
                            description: The workspace's new parent folder ID.
                            example: 1
                        summary:
                            type: string
                            description: The workspace's updated summary.
                            example: The Billing team's workspace.
        UpdatePANCollection:
            type: object
            properties:
                collection:
                    type: object
                    properties:
                        parentFolderId:
                            type: integer
                            description: The collection's new parent folder ID.
                            example: 1
                        summary:
                            type: string
                            description: The collection's updated summary.
                            example: The Billing API collection.
        UpdatePANFolder:
            type: object
            properties:
                folder:
                    type: object
                    properties:
                        name:
                            type: string
                            description: The folder's new name.
                            example: Billing
                        description:
                            type: string
                            description: The folder's updated description.
                            example: The Billing API.
                        parentFolderId:
                            type: integer
                            description: The folder's new parent folder ID.
                            example: 0
    parameters:
        apiId:
            name: apiId
            in: path
            required: true
            description: The API's ID.
            schema:
                type: string
                format: uuid
                example: 387c2863-6ee3-4a56-8210-225f774edade
        apiVersionId:
            name: apiVersionId
            in: path
            required: true
            description: The API version's ID.
            schema:
                type: string
                format: uuid
                example: a9879d02-74bf-425a-bbec-6d27aa135507
        collectionId:
            name: collectionId
            in: path
            required: true
            description: The collection's ID.
            schema:
                type: string
                format: uuid
                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
        elementId:
            name: elementId
            required: true
            description: The element's ID or UUID. For Postman Collections you must pass the collection's UID (`userId`-`collectionId`) value.
            in: path
            schema:
                type: string
                example: 5360b75f-447e-467c-9299-12fd6c92450d
        elementType:
            name: elementType
            in: path
            required: true
            description: The Private API Network element type.
            schema:
                type: string
                enum:
                    - api
                    - folder
                    - collection
                    - workspace
                example: api
        entityId:
            name: entityId
            in: path
            required: true
            description: |
                The entity's ID value

                - For `documentation` and `test` — The collection UID value.
                - For `environment` — The environment UID value.
                - For `mock` — The mock ID value.
                - For `monitor` — The monitor ID value.
            schema:
                type: string
                format: uuid
                example: e3d951bf-873f-49ac-a658-b2dcb91d3289
        environmentId:
            name: environmentId
            in: path
            required: true
            description: The environment's ID.
            schema:
                type: string
                format: uuid
                example: 5daabc50-8451-43f6-922d-96b403b4f28e
        groupId:
            name: groupId
            in: path
            required: true
            description: The group's ID.
            schema:
                type: string
                format: uuid
                example: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
        mockId:
            name: mockId
            in: path
            required: true
            description: The mock's ID.
            schema:
                type: string
                format: uuid
                example: e3d951bf-873f-49ac-a658-b2dcb91d3289
        monitorId:
            name: monitorId
            in: path
            required: true
            description: The monitor's ID.
            schema:
                type: string
                format: uuid
                example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
        relationType:
            name: relationType
            in: path
            required: true
            description: The relation type.
            schema:
                type: string
                enum:
                    - documentation
                    - test
                    - mock
                    - monitor
            example: mock
        schemaId:
            name: schemaId
            in: path
            required: true
            description: The schema's ID.
            schema:
                type: string
                format: uuid
                example: 16bb367e-fafb-4ef3-933b-ee3d971866fb
        serverResponseId:
            name: serverResponseId
            in: path
            required: true
            description: The server response's ID.
            schema:
                type: string
                format: uuid
                example: 965cdd16-fe22-4d96-a161-3d05490ac421
        userId:
            name: userId
            in: path
            required: true
            description: The user's SCIM ID.
            schema:
                type: string
                example: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
        workspaceId:
            name: workspaceId
            in: path
            required: true
            description: The workspace's ID.
            schema:
                type: string
                format: uuid
                example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
        workspaceQueryId:
            name: workspaceId
            required: false
            in: query
            description: |
                The workspace's ID.

                If you do not include this query parameter, the system defaults to the **My Workspace** workspace.
            schema:
                type: string
                format: uuid
            example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
tags:
    - name: Collections
      description: The `/collections` endpoints let you manage your [collections](https://learning.postman.com/docs/sending-requests/intro-to-collections/).
    - name: Environments
      description: The `/environments` endpoints let you manage your [environments](https://learning.postman.com/docs/sending-requests/managing-environments/).
    - name: Mocks
      description: The `/mocks` endpoints let you manage your [mock servers](https://learning.postman.com/docs/designing-and-developing-your-api/mocking-data/setting-up-mock/).
    - name: Monitors
      description: The `/monitors` endpoints let you manage your [monitors](https://learning.postman.com/docs/monitoring-your-api/intro-monitors/).
    - name: Workspaces
      description: The `/workspaces` endpoints let you manage your [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/).
    - name: User
      description: The `/me` endpoints let you manage information about the authenticated user.
    - name: Import
      description: The `/import` endpoints let you manage [importing and exporting](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/) Postman data.
    - name: API
      description: The `/apis` endpoints let you manage your APIs.
    - name: API Version
      description: |
          The API version endpoints let you manage your [API's versions](https://learning.postman.com/docs/designing-and-developing-your-api/versioning-an-api/versioning-an-api-overview/).

          ### Important

          **API versions are deprecated as of Postman v10 and higher.**

          In Postman v9, versions were major iterations of your API you could work on at the same time. In Postman v10, published versions are static representations of your API that consumers can reference (like releases in Postman v9). If you need to work on more than one major iteration of your API in Postman v10, create separate APIs.
    - name: Schema
      description: The Schema endpoints let you manage your API's schemas.
    - name: Relations
      description: The Relations endpoints let you manage your API's relations. [Relations](https://learning.postman.com/docs/designing-and-developing-your-api/developing-an-api/) are an API's connections to items such as documentation, tests, environments, mocks, and monitors.
    - name: Webhooks
      description: The `/webhooks` endpoints let you manage [custom webhooks](https://learning.postman.com/docs/running-collections/collection-webhooks/).
    - name: SCIM 2.0 - Identity
      description: |
          Postman supports [SCIM](https://en.wikipedia.org/wiki/System_for_Cross-domain_Identity_Management) (System for Cross-domain Identity Management), which allows you to automate the provisioning of your team. You can deploy Postman at scale across your organization and control access to it with your identity provider.

          **Note:**

          - You **must** be a [Postman Team admin](http://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles) to enable SCIM.
          - SCIM provisioning is only available with a Postman **Enterprise** [pricing plan](https://www.postman.com/pricing).

          ### Enabling SCIM provisioning in Postman

          You must [configure SSO](https://learning.postman.com/docs/administration/sso/admin-sso/) and [enable SCIM](http://learning.postman.com/docs/administration/managing-your-team/configuring-scim/#enabling-scim-provisioning) for your Postman team to use these endpoints.

          **Important:**

          To use SCIM, you must have only **one** SSO method configured. If you have more than one SSO method enabled, you **cannot** generate an SCIM API key.

          ### SCIM provisioning limitations

          You can only deactivate users with the SCIM API. You **cannot** permanently delete users with the API.

          ### Rate limits

          For your organization's team, Postman applies per-minute rate limits across all SCIM API endpoints. This helps ensure that you have the best experience using Postman's SCIM API. The rate limits apply as follows:

          - **Write (POST, PUT, PATCH)** — 180 requests per minute.
          - **Read (GET)** — 300 requests per minute.

          If your requests are limited, the API will return an HTTP `429 Too Many Requests` response status code.
    - name: User Provisioning
      description: |
          The `/scim/v2/Users` endpoint lets you provision and manage your Postman users.

          **Note:**

          You can only deactivate users with the SCIM API. You **cannot** permanently delete users with the API.

          ### Provisioning users with the SCIM API

          - You can only deactivate users with the SCIM API. You cannot permanently delete users with the API.
          - Users created with the SCIM API are automatically created in Postman:
            - If the account's email ID does not exist, the user is also added to their organization's Postman team.
            - If the account's email ID already exists, the system sends the user an email invite to join the Postman team. After they accept the invite, the are added to the team.
          - By default, new users are given the developer role in Postman. Postman user roles cannot be updated via the SCIM API. You must manage user and group roles in Postman.
    - name: Group Provisioning
      description: The `/scim/v2/Groups` endpoint lets you provision and manage your Postman groups.
    - name: API Security
      description: The API Security endpoints let you manage the [security of your API](https://learning.postman.com/docs/api-governance/api-definition/api-definition-warnings/). API security includes ensuring you follow security and format warnings and schema validation.
    - name: Audit Logs
      description: |
          The [Audit Logs](https://learning.postman.com/docs/administration/audit-logs/) endpoints let you monitor and analyze your Professional or Enterprise Postman teams.

          **Note:**

          These endpoints are **only** available to Postman **Professional** and **Enterprise** [pricing plans](https://www.postman.com/pricing).
    - name: Private API Network
      description: The `/private` endpoint lets you manage and work with your team's [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/).
